import org.jetbrains.dokka.gradle.DokkaTask

buildscript {
    // Project-wide variables
    ext {
        kotlinVersion = "1.8.10"
    }
    
    /**
     * The repositories block configures the repositories Gradle uses to
     * search or download the dependencies.
     */
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    
    /**
     * The dependencies block configures the dependencies Gradle needs to use
     * to build your project.
     */
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
    
        // Dependency update checking plugin
        classpath "com.github.ben-manes:gradle-versions-plugin:0.42.0"
        
        // Hilt DI plugin
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.41'
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.21.0"
    id 'io.codearte.nexus-staging' version "0.30.0"
    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false
    id "org.jetbrains.dokka" version "1.8.10"
    id "org.jetbrains.kotlin.plugin.parcelize" version "1.8.10" apply false
}

//apply from: rootProject.file("scripts/custom/versions.gradle")

/**
 * The allprojects block is where you configure the repositories and
 * dependencies used by all modules in your project, such as third-party plugins
 * or libraries. However, you should configure module-specific dependencies in
 * each module-level build.gradle file. For new projects.
 */
allprojects {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

subprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        // Kotlin compiler JVM-target version (as string)
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8
            freeCompilerArgs += ["-module-name", project.path.replace(':', '')]
        }
    
        // Kotlin compiler JVM-target version (as int)
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    tasks.withType(DokkaTask.class) {
        suppressInheritedMembers.set(true)
        String dokkaBaseConfiguration = """
        {
          "footerMessage": "(c) 2023 Catch"
        }
        """
        pluginsMapConfiguration.set(
                // fully qualified plugin name to json configuration
                ["org.jetbrains.dokka.base.DokkaBase": dokkaBaseConfiguration]
        )
    }
}